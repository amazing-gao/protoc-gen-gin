syntax = "proto3";
package api;

import "third_party/gogoproto/gogo.proto";
import "third_party/google/api/annotations.proto";

message Error {
  int32 status = 1;
  int32 errcode = 2;
  string errmsg = 3;
}

message User {
  int32 id = 1;
  string name = 2;
}

message LoginReq {
  // 手机号码
  string mobile = 1 [(gogoproto.moretags) = "binding:\"required\""];
  // 短信验证码
  string ticket = 2 [(gogoproto.moretags) = "binding:\"required\""];
}

message LoginResp {
  Error error = 1;
  string token = 2 [(gogoproto.jsontag) = "token"];
}

message UserInfoReq {
  int32 id = 1 [(gogoproto.moretags) = "uri:\"id\" binding:\"required\""];
}

message UserInfoResp {
  User user = 1;
}

message UserPageReq {
  int32 page = 1 [(gogoproto.moretags) = "form:\"page\" binding:\"required\""];
  int32 size = 2 [(gogoproto.moretags) = "form:\"size\" binding:\"required\""];
}

message UserPageResp {
  repeated User users = 1 [(gogoproto.jsontag) = "users"];
  int32 page = 2 [(gogoproto.jsontag) = "page"];
  int32 size = 3 [(gogoproto.jsontag) = "size"];
  int32 total = 4 [(gogoproto.jsontag) = "total"];
}


service UserService {
  rpc Login(LoginReq) returns (LoginResp) {
    option (google.api.http) = {
      post: "/user/login"
      body: "*"
    };
  }

  rpc Info(UserInfoReq) returns (UserInfoResp) {
    option (google.api.http) = {
      get: "/user/{id}"
    };
  }

  rpc Page(UserPageReq) returns (UserPageResp) {
    option (google.api.http) = {
      get: "/user"
    };
  }
}
